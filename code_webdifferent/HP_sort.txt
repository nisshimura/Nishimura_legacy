### webスクレイピングよる各ブラウザーの差分の検出
　-画面キャプチャ
　-データを集める
　-集めたデータを解析
　-人工知能で判定機を作る

+画面キャプチャー(全画面)
    already
    - selenium
     -chromeはheadlessモード
     -FFは、headlessmode
     -ME(googleに変更されてheadless mode使用可で可能に)
     -IE11(スクロールバー問題、横にスクロールは保留)(ディスプレの大きさを150→100に)    
     -Safari(デフォルトで全画面)(OSによると思うがurl参照)
     -ios safari (https://qiita.com/ryuji_yasu/items/f0cb687365919ec4d3c1)
     
    yet
     -android chrome(andoroid studio?)(android SDK)
     -旧edge(いらない)
    →OSによって何か変わるか

+HPを探索し、ハイパーリンクを取得していく
    -selenium
    ・aタグ、href属性で探索する
    　-get_attribute('href') でhrefに入っている値をとれる(URL)
      -集めたURLをリストに格納
      -for文で全部のURLに飛ぶ
      -driver.close()
    

+ファイルの命名
    -re
     -ex)https://www.sophia-s.co.jp/company/
     　→www.sophia-s.co.jp
     
     -s = re.match("https?://w*[^/]+/",url)
      st = re.sub("/","",s.group())
      stu = re.sub("https?:","",st)

    -番号
     -上記　+ count += 1 
      or
     -URL
      or  
     -NO_name_ID_

     
+listのURLを取得して
    -pandas
    -openpyxl

+opencv
+並列処理
    -threading(標準搭載)



+問題点
    -HPの作画が間に合わないHTMLむきだしのキャプチャーがとれる
    -youtubeのキャプチャーがとれない
    　→著作権的な問題？
    -href以外に格納されているとき
    -ME、FF、Chrome以外の時が未実装
    -IEがきつそう

+要求
    -NOが関数になっているので数字をビーってする奴に変更
    -（SP）を消す
    -中に余計なものを入れない

[参考URL]
-python_命名規則(https://qiita.com/naomi7325/items/4eb1d2a40277361e898b)

>re使い方(https://docs.python.org/ja/3/library/re.html)(https://ai-inter1.com/python-regex/)(https://qiita.com/kph7mgb/items/6b5ae4e3bc29dffd9f83)
>re_まとめ(https://qiita.com/dongri/items/2a0a18e253eb5bf9edba)(https://qiita.com/hiroyuki_mrp/items/29e87bf5fe46de62983c)
>urlの正規表現におけるドメインの取得(https://qa.atmarkit.co.jp/q/9605)

>subprocessの使い方(https://techacademy.jp/magazine/19189)
>subprocess_python.html(https://docs.python.org/3/library/subprocess.html)
>subprocess_example(https://qiita.com/derodero24/items/17f24ed59d4f5650b3f5)

>seleniumで画面キャプチャ(https://qiita.com/derodero24/items/17f24ed59d4f5650b3f5)
>selenium+headless(https://blog.amedama.jp/entry/2018/07/28/003342)(https://qiita.com/orangain/items/db4594113c04e8801aad)
>selenium_easy(https://qiita.com/mochio/items/dc9935ee607895420186)
>selenium_HTML(https://qiita.com/Gen6/items/66f190d3c9e345e97ed2)
>selenium_find(https://qiita.com/yuta_ichi/items/0be6671fbaea842d9a38)
>selenium_css selector(https://www.htmlhifive.com/conts/web/view/study-room/selector)
>selenium_Xpath(https://watlab-blog.com/2019/08/12/selenium-xpath/)
>selenium_常套表現(https://qiita.com/mochio/items/dc9935ee607895420186)(https://qiita.com/VA_nakatsu/items/0095755dc48ad7e86e2f)
>selenium_href(https://teratail.com/questions/154740)
>ME_screenshot(https://qiita.com/yk109/items/3054cae9591f7fee8c2b)

>画像処理_pillow(https://note.nkmk.me/python-pillow-concat-images/)
>scroll_prtsc(https://qiita.com/myhr/items/dff7cee30182ab56f737)

>chrome_on_android(https://www.slideshare.net/hirofumitouhei/google-chrome-on-android)

>pandas(https://datumstudio.jp/blog/1722)
>openpyxl(https://qiita.com/mimitaro/items/2b48b377b14018bdf6cb)(https://tonari-it.com/python-openpyxl-beginner-2/)

>safari_on_ios
>ME_webdriver(https://qiita.com/uguisuheiankyo/items/e331ab59b881613908f3)(https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/)
>FF_webdriver(https://qiita.com/koikeke0911/items/e9c9516e919875e1cf55)
>IE_webdriver(https://selenium.dev/downloads/)
>旧edge_webdriver(https://stackoverflow.com/questions/57169524/using-python-selenium-for-microsoft-edge)
>Safari_webdriver(https://developer.apple.com/documentation/webkit/testing_with_webdriver_in_safari)


https://www.meitetsufudosan.co.jp/mom/
https://frp:athome@at-frp-sophiasolutions.netlify.app/
https://www.residia.jp/housing/top/31